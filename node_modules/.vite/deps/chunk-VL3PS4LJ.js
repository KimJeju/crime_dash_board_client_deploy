import {
  TransitionWrapper_default,
  transitionEndListener,
  triggerBrowserReflow
} from "./chunk-CHY62F4X.js";
import {
  useEventCallback,
  useMergedRefs_default
} from "./chunk-5RAI6JJD.js";
import {
  ENTERED,
  ENTERING
} from "./chunk-J2TQXOBU.js";
import {
  require_classnames
} from "./chunk-NYJC4XS5.js";
import {
  require_jsx_runtime
} from "./chunk-KHN7SQKI.js";
import {
  require_react
} from "./chunk-LL6ON2IQ.js";
import {
  __toESM
} from "./chunk-CEQRFMJQ.js";

// node_modules/@restart/ui/esm/NoopTransition.js
var import_react = __toESM(require_react());
function NoopTransition({
  children,
  in: inProp,
  onExited,
  mountOnEnter,
  unmountOnExit
}) {
  const ref = (0, import_react.useRef)(null);
  const hasEnteredRef = (0, import_react.useRef)(inProp);
  const handleExited = useEventCallback(onExited);
  (0, import_react.useEffect)(() => {
    if (inProp)
      hasEnteredRef.current = true;
    else {
      handleExited(ref.current);
    }
  }, [inProp, handleExited]);
  const combinedRef = useMergedRefs_default(ref, children.ref);
  const child = (0, import_react.cloneElement)(children, {
    ref: combinedRef
  });
  if (inProp)
    return child;
  if (unmountOnExit) {
    return null;
  }
  if (!hasEnteredRef.current && mountOnEnter) {
    return null;
  }
  return child;
}
var NoopTransition_default = NoopTransition;

// node_modules/react-bootstrap/esm/Fade.js
var import_classnames = __toESM(require_classnames());
var React = __toESM(require_react());
var import_react2 = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var fadeStyles = {
  [ENTERING]: "show",
  [ENTERED]: "show"
};
var Fade = React.forwardRef(({
  className,
  children,
  transitionClasses = {},
  onEnter,
  ...rest
}, ref) => {
  const props = {
    in: false,
    timeout: 300,
    mountOnEnter: false,
    unmountOnExit: false,
    appear: false,
    ...rest
  };
  const handleEnter = (0, import_react2.useCallback)((node, isAppearing) => {
    triggerBrowserReflow(node);
    onEnter == null ? void 0 : onEnter(node, isAppearing);
  }, [onEnter]);
  return (0, import_jsx_runtime.jsx)(TransitionWrapper_default, {
    ref,
    addEndListener: transitionEndListener,
    ...props,
    onEnter: handleEnter,
    childRef: children.ref,
    children: (status, innerProps) => React.cloneElement(children, {
      ...innerProps,
      className: (0, import_classnames.default)("fade", className, children.props.className, fadeStyles[status], transitionClasses[status])
    })
  });
});
Fade.displayName = "Fade";
var Fade_default = Fade;

export {
  NoopTransition_default,
  Fade_default
};
//# sourceMappingURL=chunk-VL3PS4LJ.js.map
